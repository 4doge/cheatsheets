(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{54:function(e,t,r){"use strict";r.r(t);var a=r(0),s=Object(a.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("div",{staticClass:"content"},[r("h1",{attrs:{id:"content"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#content","aria-hidden":"true"}},[e._v("#")]),e._v(" Content")]),r("ul",[r("li",[e._v("Docker orchestration tools")]),r("li",[e._v("Docker Cloud infrastructure")]),r("li",[e._v("Kubernetes")]),r("li",[e._v("Minikube")]),r("li",[e._v("Init Kubernetes cluster")]),r("li",[e._v("Kubernetes components")]),r("li",[e._v("Containerization overview")]),r("li",[e._v("Kubernetes infrastructure - 1")]),r("li",[e._v("Kubernetes UI")]),r("li",[e._v("Kubernetes infrastructure - 2")]),r("li",[e._v("Ingress ?")]),r("li",[e._v("Volumes ?")]),r("li",[e._v("PetSets ?")]),r("li",[e._v("HTTPS for the UI dashboard")])]),r("h1",{attrs:{id:"docker-orchestration-tools"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#docker-orchestration-tools","aria-hidden":"true"}},[e._v("#")]),e._v(" Docker orchestration tools")]),r("ul",[r("li",[e._v("Docker Cloud")]),r("li",[e._v("Docker Swarm")]),r("li",[e._v("Docker Compose")]),r("li",[e._v("Kubernetes")])]),r("h1",{attrs:{id:"docker-cloud-infrastructure"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#docker-cloud-infrastructure","aria-hidden":"true"}},[e._v("#")]),e._v(" Docker Cloud infrastructure")]),r("ul",[r("li",[e._v("Repositories")]),r("li",[e._v("Cluster")]),r("li",[e._v("Nodes")]),r("li",[e._v("Stacks")]),r("li",[e._v("Services")]),r("li",[e._v("Containers")])]),r("h1",{attrs:{id:"kubernetes"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes","aria-hidden":"true"}},[e._v("#")]),e._v(" Kubernetes")]),r("p",[e._v("Google Borg ~2007")]),r("ul",[r("li",[e._v("hundreds of thousands jobs")]),r("li",[e._v("hundreds of clusters")]),r("li",[e._v("10 thousands machines in each cluster")]),r("li",[e._v("task-packing")]),r("li",[e._v("machine sharing")]),r("li",[e._v("process-level performance isolation")]),r("li",[e._v("runtime features that minimize fault-recovery time")]),r("li",[e._v("declarative job specification language")]),r("li",[e._v("real-time job monitoring")]),r("li",[e._v("tools to analyze and simulate system behavior")])]),r("p",[e._v("Kubernetes or k8s - 2014")]),r("ul",[r("li",[e._v("production grade")]),r("li",[e._v("open source")]),r("li",[e._v("scaling")]),r("li",[e._v("package manager - "),r("a",{attrs:{href:"https://helm.sh",target:"_blank",rel:"noopener noreferrer"}},[e._v("Helm")])]),r("li",[e._v("dashboard UI")]),r("li",[e._v("cloud platform support")]),r("li",[e._v("modular")])]),r("h1",{attrs:{id:"minikube"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#minikube","aria-hidden":"true"}},[e._v("#")]),e._v(" Minikube")]),r("p",[r("a",{attrs:{href:"https://github.com/kubernetes/minikube",target:"_blank",rel:"noopener noreferrer"}},[e._v("Minikube")])]),r("h1",{attrs:{id:"init-kubernetes-cluster"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#init-kubernetes-cluster","aria-hidden":"true"}},[e._v("#")]),e._v(" Init Kubernetes cluster")]),r("p",[r("a",{attrs:{href:"https://github.com/4doge/cheatsheets/blob/master/k8s/kubernetes.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("kubernetes.md")])]),r("h1",{attrs:{id:"kubernetes-components"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes-components","aria-hidden":"true"}},[e._v("#")]),e._v(" Kubernetes components")]),r("h4",{attrs:{id:"master-components"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#master-components","aria-hidden":"true"}},[e._v("#")]),e._v(" Master components")]),r("h6",{attrs:{id:"etcd"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#etcd","aria-hidden":"true"}},[e._v("#")]),e._v(" etcd")]),r("p",[e._v("Storing master state and overall configuration. Notify other components about changes/updates of the state.")]),r("h6",{attrs:{id:"api-server"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#api-server","aria-hidden":"true"}},[e._v("#")]),e._v(" API Server")]),r("p",[e._v("REST API. CRUD for the objects in etcd.")]),r("h6",{attrs:{id:"scheduler"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#scheduler","aria-hidden":"true"}},[e._v("#")]),e._v(" Scheduler")]),r("p",[e._v("Binding API for the pods. Choose node for the new created pod.")]),r("h6",{attrs:{id:"controller-manager-server"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#controller-manager-server","aria-hidden":"true"}},[e._v("#")]),e._v(" Controller Manager Server")]),r("p",[e._v("Discover and manage different controllers.")]),r("p",[r("strong",[e._v("Node Controller")]),e._v(": Responsible for noticing and responding when nodes go down.")]),r("p",[r("strong",[e._v("Replication Controller")]),e._v(": Responsible for maintaining the correct number of pods for every replication controller object in the system.")]),r("p",[r("strong",[e._v("Endpoints Controller")]),e._v(": Populates the Endpoints object (that is, joins Services & Pods).")]),r("p",[r("strong",[e._v("Service Account & Token Controllers")]),e._v(": Create default accounts and API access tokens for new namespaces.")]),r("h4",{attrs:{id:"node-components"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#node-components","aria-hidden":"true"}},[e._v("#")]),e._v(" Node components")]),r("h6",{attrs:{id:"kubelet"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#kubelet","aria-hidden":"true"}},[e._v("#")]),e._v(" kubelet")]),r("p",[e._v("It makes sure that containers are running in a pod.")]),r("h6",{attrs:{id:"kube-proxy"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#kube-proxy","aria-hidden":"true"}},[e._v("#")]),e._v(" kube-proxy")]),r("p",[e._v("Networking and port forwarding.")]),r("h6",{attrs:{id:"container-runtime"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#container-runtime","aria-hidden":"true"}},[e._v("#")]),e._v(" Container Runtime")]),r("p",[e._v("Software that is responsible for running containers (docker, rkt, runc)")]),r("h1",{attrs:{id:"containerization-overview"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#containerization-overview","aria-hidden":"true"}},[e._v("#")]),e._v(" Containerization overview")]),r("ul",[r("li",[e._v("virtual machine vs container")]),r("li",[e._v("containers on cloud")])]),r("h1",{attrs:{id:"kubernetes-infrastructure-1"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes-infrastructure-1","aria-hidden":"true"}},[e._v("#")]),e._v(" Kubernetes infrastructure - 1")]),r("h6",{attrs:{id:"pods"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#pods","aria-hidden":"true"}},[e._v("#")]),e._v(" pods")]),r("ul",[r("li",[e._v("describe app in yaml or json")]),r("li",[e._v("1 or more containers")]),r("li",[e._v("communication between containers by local port numbers")])]),r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("kubectl create -f example.yml\nkubectl get pod\nkubectl describe pod <pod_name>\nkubectl attach <pod_name> -i\nkubectl exec <pod_name> -- <command>\nkubectl delete pod <pod_name>\n")])]),r("p",[e._v("https://kubernetes.io/docs/reference/generated/federation/v1/definitions/")]),r("h6",{attrs:{id:"services"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#services","aria-hidden":"true"}},[e._v("#")]),e._v(" services")]),r("ul",[r("li",[e._v("access app outside the cluster")]),r("li",[e._v("run ELB on AWS")]),r("li",[e._v("route traffic to the correct pod")]),r("li",[e._v("haproxy/nginx")]),r("li",[e._v("domain name point to ELB (alias)")]),r("li",[e._v("types: LoadBalancer / ClusterIP(default, reach only from the cluster) / NodePort(reachable externally)")])]),r("h1",{attrs:{id:"kubernetes-ui"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes-ui","aria-hidden":"true"}},[e._v("#")]),e._v(" Kubernetes UI")]),r("p",[r("a",{attrs:{href:"https://github.com/kubernetes/dashboard",target:"_blank",rel:"noopener noreferrer"}},[e._v("Dashboard")])]),r("h1",{attrs:{id:"kubernetes-infrastructure-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes-infrastructure-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Kubernetes infrastructure - 2")]),r("h6",{attrs:{id:"replication-controllers"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#replication-controllers","aria-hidden":"true"}},[e._v("#")]),e._v(" replication controllers")]),r("ul",[r("li",[e._v("stateless vs stateful")]),r("li",[e._v("session management")]),r("li",[e._v("localfiles management")]),r("li",[e._v("scaling")]),r("li",[e._v("ALWAYS USE replication controller instead of pod definition")]),r("li",[e._v("can be specify only 1 replica\n"),r("code",[e._v("kubectl scale --replicas=5 rc/helloworld-controller")])])]),r("h6",{attrs:{id:"replica-set"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#replica-set","aria-hidden":"true"}},[e._v("#")]),e._v(" replica set")]),r("ul",[r("li",[e._v("next-generation replication controller")]),r("li",[e._v("new selector(multiple)")]),r("li",[e._v("used by deployment object")])]),r("h6",{attrs:{id:"deployments"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#deployments","aria-hidden":"true"}},[e._v("#")]),e._v(" deployments")]),r("ul",[r("li",[e._v('definition of state(e.g. state = "run app 5 times")')]),r("li",[e._v("replication controller or replica set = hard to manage, a lot of manual work")]),r("li",[e._v("create/update application")]),r("li",[e._v("rolling-updates (zero downtime)")]),r("li",[e._v("rollbacks")]),r("li",[e._v("pause/resume deployment")])]),r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("kubectl get deployments\nkubectl get rs\nkubectl set image deployment/helloworld-deployment k8s-demo=k8s-demo:2\nkubectl rollout undo deployment/helloworld-deployment\n")])]),r("h6",{attrs:{id:"labels"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#labels","aria-hidden":"true"}},[e._v("#")]),e._v(" labels")]),r("ul",[r("li",[e._v("label any object (pod/svc/rc/deployment)")]),r("li",[e._v("key/value")]),r("li",[e._v("multiple")]),r("li",[e._v("tag node (run only on specific node)")]),r("li",[e._v("nodeSelector")])]),r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("kubectl label node <node_name> key=value\nkubectl get pods -l environment=production,tier=frontend\n")])]),r("h6",{attrs:{id:"healthchecks"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#healthchecks","aria-hidden":"true"}},[e._v("#")]),e._v(" healthchecks")]),r("ul",[r("li",[e._v("types: periodical commands, periodical check over http")]),r("li",[e._v("livenessProbe and readinessProbe")]),r("li",[e._v("/healthz")])]),r("h6",{attrs:{id:"secrets"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#secrets","aria-hidden":"true"}},[e._v("#")]),e._v(" secrets")]),r("ul",[r("li",[e._v('"secret" data')]),r("li",[e._v("key/value")]),r("li",[e._v("use as env vars or file(via volume)")])]),r("h6",{attrs:{id:"config-map"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#config-map","aria-hidden":"true"}},[e._v("#")]),e._v(" config map")]),r("ul",[r("li",[e._v("credentials storing")]),r("li",[e._v("key/value")]),r("li",[e._v("use as env vars or file(via volume) or container commandline args")])]),r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("username=test\npassword=example\n")])]),r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("kubectl create configmap app-config --from-file=example.txt\n")])])])}],!1,null,null,null);t.default=s.exports}}]);