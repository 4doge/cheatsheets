(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{62:function(t,e,s){"use strict";s.r(e);var a=s(0),n=Object(a.a)({},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"content"},[this._m(0),e("p",[this._v("To deliver your project to Kubernetes you need to have the next steps in your CI configuration:")]),e("ul",[this._m(1),e("li",[e("p",[e("router-link",{attrs:{to:"/kubernetes/setup-machine-for-cluster-management.html#kubectl"}},[this._v("Install Kubectl")])],1)]),this._m(2)]),this._m(3)])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"continuous-integration"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#continuous-integration","aria-hidden":"true"}},[this._v("#")]),this._v(" Continuous integration")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("li",[s("p",[t._v("Setup environment variables:")]),s("ul",[s("li",[s("code",[t._v("KUBERNETES_CLUSTER")]),t._v(" - cluster name")]),s("li",[s("code",[t._v("KUBERNETES_API_SERVER")]),t._v(" - IP address or domain name of the master node(with installed API server) with HTTPS(!) protocol")]),s("li",[s("code",[t._v("KUBERNETES_TOKEN")]),t._v(" - get it by execute the "),s("code",[t._v("kubectl get secret")]),t._v(" (search for "),s("code",[t._v("default-token-xxxxx")]),t._v(") and "),s("code",[t._v("kubectl describe secret default-token-xxxxx")]),t._v(" (search for "),s("code",[t._v("token")]),t._v(")")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[this._v("Run next commands:")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" kubectl config set-cluster "),s("span",{attrs:{class:"token variable"}},[t._v("$KUBERNETES_CLUSTER")]),t._v(" --insecure-skip-tls-verify"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("true --server"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),s("span",{attrs:{class:"token variable"}},[t._v("$KUBERNETES_API_SERVER")]),t._v("\n\n"),s("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" kubectl config set-credentials admin --token"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),s("span",{attrs:{class:"token variable"}},[t._v("$KUBERNETES_TOKEN")]),t._v("\n\n"),s("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" kubectl config set-context "),s("span",{attrs:{class:"token variable"}},[t._v("$KUBERNETES_CLUSTER")]),t._v(" --cluster"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),s("span",{attrs:{class:"token variable"}},[t._v("$KUBERNETES_CLUSTER")]),t._v(" --user"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("admin\n\n"),s("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" kubectl config use-context "),s("span",{attrs:{class:"token variable"}},[t._v("$KUBERNETES_CLUSTER")]),t._v("\n\n"),s("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" kubectl cluster-info\n\n"),s("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" kubectl get pods\n\n"),s("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" kubectl "),s("span",{attrs:{class:"token keyword"}},[t._v("set")]),t._v(" image deployment/"),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("deployment_name"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{attrs:{class:"token variable"}},[t._v("$CIRCLE_PROJECT_REPONAME")]),s("span",{attrs:{class:"token operator"}},[t._v("=")]),s("span",{attrs:{class:"token variable"}},[t._v("$DOCKER_CLOUD_USERNAME")]),t._v("/"),s("span",{attrs:{class:"token variable"}},[t._v("$CIRCLE_PROJECT_REPONAME")]),s("span",{attrs:{class:"token keyword"}},[t._v(":")]),s("span",{attrs:{class:"token variable"}},[t._v("$CIRCLE_BRANCH")]),t._v("-"),s("span",{attrs:{class:"token variable"}},[t._v("$CIRCLE_BUILD_NUM")]),t._v("\n")])])}],!1,null,null,null);e.default=n.exports}}]);